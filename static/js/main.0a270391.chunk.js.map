{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","maxPosition","length","widthStep","className","style","width","transform","transition","map","img","src","alt","type","onClick","setState","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"uPAgBMA,E,4MACJC,MAAQ,CACNC,SAAU,G,4CAGZ,WAAU,IAAD,OACP,EAOIC,KAAKC,MANPC,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UAJF,IAKEC,yBALF,MAKsB,IALtB,MAMEC,gBANF,SASQR,EAAaC,KAAKF,MAAlBC,SACFS,GAAeH,GAAaH,EAAOO,OAASL,GAC5CM,EAAYP,EAAOE,EAEzB,OACE,sBAAKM,UAAU,WAAf,UACE,qBACEA,UAAU,YACVC,MAAO,CACLC,MAAOT,EAAYC,GAHvB,SAME,oBACEM,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBf,EAAhB,OACTgB,WAAW,aAAD,OAAeT,EAAf,YAJd,SAOGJ,EAAOc,KAAI,SAACC,GAAD,OACV,oBACEN,UAAU,OAEVC,MAAO,CACLC,MAAOR,GAJX,SAOE,qBAAKa,IAAKD,EAAKE,IAAI,MALdF,UAWb,wBACEG,KAAK,SACLC,QAAS,WACHtB,EAAWW,EAAY,EACzB,EAAKY,SACH,CAAEvB,SAAU,IAGd,EAAKuB,SACH,CAAEvB,SAAUA,EAAWW,IAIV,IAAbX,GAAkBQ,GACpB,EAAKe,SACH,CAAEvB,SAAUS,KAfpB,kBAuBA,wBACEY,KAAK,SACL,UAAQ,OACRC,QAAS,WACHtB,EAAWW,GAAaF,EAC1B,EAAKc,SACH,CAAEvB,SAAUS,IAGd,EAAKc,SACH,CAAEvB,SAAUA,EAAWW,IAIvBX,IAAaS,GAAeD,GAC9B,EAAKe,SACH,CAAEvB,SAAU,KAhBpB,yB,GAvEewB,aAmGR1B,IC3GT2B,E,4MACJ1B,MAAQ,CACNI,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWF,KAAKF,MAAhBI,OAER,OACE,sBAAKS,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCT,EAAOO,OAA1C,aAEA,cAAC,EAAD,CACEP,OAAQA,EACRC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,W,GA9BFkB,IAAMF,WAqCTC,IC1CfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0a270391.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number\n  infinite: boolean,\n};\n\ntype State = {\n  position: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration = 1000,\n      infinite = false,\n    } = this.props;\n\n    const { position } = this.state;\n    const maxPosition = -itemWidth * (images.length - frameSize);\n    const widthStep = step * itemWidth;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"container\"\n          style={{\n            width: frameSize * itemWidth,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((img) => (\n              <li\n                className=\"item\"\n                key={img}\n                style={{\n                  width: itemWidth,\n                }}\n              >\n                <img src={img} alt=\"\" />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (position + widthStep > 0) {\n              this.setState(\n                { position: 0 },\n              );\n            } else {\n              this.setState(\n                { position: position + widthStep },\n              );\n            }\n\n            if (position === 0 && infinite) {\n              this.setState(\n                { position: maxPosition },\n              );\n            }\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => {\n            if (position - widthStep <= maxPosition) {\n              this.setState(\n                { position: maxPosition },\n              );\n            } else {\n              this.setState(\n                { position: position - widthStep },\n              );\n            }\n\n            if (position === maxPosition && infinite) {\n              this.setState(\n                { position: 0 },\n              );\n            }\n          }}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}