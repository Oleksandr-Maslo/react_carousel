{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","maxPosition","length","widthStep","className","style","width","transform","transition","map","img","src","alt","type","onClick","setState","Component","App","stateUpdate","name","value","action","placeholder","onChange","event","target","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f017fa9f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number\n  infinite: boolean,\n};\n\ntype State = {\n  position: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n    const maxPosition = -itemWidth * (images.length - frameSize);\n    const widthStep = step * itemWidth;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"container\"\n          style={{\n            width: frameSize * itemWidth,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((img) => (\n              <li\n                className=\"item\"\n                key={img}\n                style={{\n                  width: itemWidth,\n                }}\n              >\n                <img src={img} alt=\"\" />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (position + widthStep > 0) {\n              this.setState(\n                { position: 0 },\n              );\n            } else {\n              this.setState(\n                { position: position + widthStep },\n              );\n            }\n\n            if (position === 0 && !infinite) {\n              this.setState(\n                { position: maxPosition },\n              );\n            }\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => {\n            if (position - widthStep <= maxPosition) {\n              this.setState(\n                { position: maxPosition },\n              );\n            } else {\n              this.setState(\n                { position: position - widthStep },\n              );\n            }\n\n            if (position === maxPosition && !infinite) {\n              this.setState(\n                { position: 0 },\n              );\n            }\n          }}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean\n}\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  stateUpdate = (name: string, value: number | string) => {\n    this.setState((state) => {\n      return { ...state, [name]: value };\n    });\n  };\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          {/* eslint-disable-next-line */}\n          <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n          <Carousel\n            images={images}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </div>\n\n        <form\n          action=\"#\"\n          className=\"form\"\n        >\n          <div>\n            <input\n              type=\"number\"\n              name=\"step\"\n              placeholder=\"Step\"\n              className=\"form-item\"\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </div>\n\n          <div>\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              placeholder=\"Frame size\"\n              className=\"form-item\"\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </div>\n\n          <div>\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              placeholder=\"Item width\"\n              className=\"form-item\"\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </div>\n\n          <div>\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              placeholder=\"Animation duration\"\n              className=\"form-item\"\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </div>\n\n          <div>\n            <select\n              name=\"infinite\"\n              placeholder=\"Infinite\"\n              className=\"form-item\"\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            >\n              <option value=\"true\"> true </option>\n              <option value=\"false\"> false </option>\n            </select>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}