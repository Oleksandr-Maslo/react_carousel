{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","pointer","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","maxPointer","length","position","className","style","width","transform","transition","map","img","src","alt","type","onClick","setState","Component","App","stateUpdate","name","value","removeNegatives","event","key","preventDefault","action","defaultValue","min","onKeyDown","onChange","target","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.981b9101.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number\n  infinite: string,\n};\n\ntype State = {\n  pointer: number,\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    pointer: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { pointer } = this.state;\n    const maxPointer = images.length - frameSize;\n    const minPointer = 0;\n\n    const position = -pointer * itemWidth;\n\n    const setNextPosition = () => {\n      if (pointer + step > maxPointer) {\n        this.setState(\n          { pointer: maxPointer },\n        );\n      } else {\n        this.setState(\n          { pointer: pointer + step },\n        );\n      }\n\n      if (pointer === maxPointer && infinite === 'true') {\n        this.setState(\n          { pointer: minPointer },\n        );\n      }\n    };\n\n    const setPrevPosition = () => {\n      if (pointer - step < minPointer) {\n        this.setState(\n          { pointer: minPointer },\n        );\n      } else {\n        this.setState(\n          { pointer: pointer - step },\n        );\n      }\n\n      if (pointer === 0 && infinite === 'true') {\n        this.setState(\n          { pointer: maxPointer },\n        );\n      }\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"container\"\n          style={{\n            width: frameSize * itemWidth,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((img) => (\n              <li\n                className=\"item\"\n                key={img}\n              >\n                <img\n                  src={img}\n                  alt=\"\"\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={setPrevPosition}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={setNextPosition}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: string\n}\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: 'false',\n  };\n\n  stateUpdate = (name: string, value: number | string) => {\n    this.setState({ [name]: value } as Pick<State, keyof State>);\n  };\n\n  removeNegatives = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === '-') {\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n          <Carousel\n            images={images}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </div>\n\n        <form\n          action=\"#\"\n          className=\"form\"\n        >\n          <label className=\"form-labels\">\n            <div>Step</div>\n\n            <input\n              type=\"number\"\n              name=\"step\"\n              defaultValue={step}\n              min={0}\n              className=\"form-item\"\n              onKeyDown={this.removeNegatives}\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </label>\n\n          <label className=\"form-labels\">\n            <div>Frame size</div>\n\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              defaultValue={frameSize}\n              min={0}\n              className=\"form-item\"\n              onKeyDown={this.removeNegatives}\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </label>\n\n          <label className=\"form-labels\">\n            <div>Item width</div>\n\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min={0}\n              className=\"form-item\"\n              onKeyDown={this.removeNegatives}\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </label>\n\n          <label className=\"form-labels\">\n            <div>Animation duration</div>\n\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              defaultValue={animationDuration}\n              min={0}\n              className=\"form-item\"\n              onKeyDown={this.removeNegatives}\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            />\n          </label>\n\n          <label className=\"form-labels\">\n            <div>Infinite animation</div>\n\n            <select\n              name=\"infinite\"\n              defaultValue=\"false\"\n              className=\"form-item\"\n              onChange={(event) => (\n                this.stateUpdate(event.target.name, event.target.value)\n              )}\n            >\n              <option value=\"true\"> true </option>\n              <option value=\"false\"> false </option>\n            </select>\n          </label>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}